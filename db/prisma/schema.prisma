generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:password@localhost:5432/postgres"
}

model Activity {
  id          String    @id
  userId      String
  companyId   String
  dealId      String
  peopleId    String
  detail_id   String
  date        DateTime
  created_at  DateTime
  workspaceId String
  type        String
  Company     Company   @relation(fields: [companyId], references: [id])
  Deal        Deal      @relation(fields: [dealId], references: [id])
  People      People    @relation(fields: [peopleId], references: [id])
  User        User      @relation(fields: [userId], references: [id])
  Workspace   Workspace @relation(fields: [workspaceId], references: [id])
  File        File[]

  @@map("activities")
}

model Company {
  id          String     @id
  url         String     @unique
  name        String
  ownerId     Int
  num_emps    Int
  city        String
  state       String
  country     String
  linkedin    String
  facebook    String
  instagram   String
  twitter     String
  tagId       String
  range_emps  String
  range_rev   String
  address_1   String
  address_2   String
  created_at  DateTime
  createdById String
  workspaceId String
  Activity    Activity[]
  User        User       @relation(fields: [createdById], references: [id])
  Workspace   Workspace  @relation(fields: [workspaceId], references: [id])
  Deal        Deal[]
  People      People[]
  Task        Task[]

  @@map("companies")
}

model Deal {
  id            String     @id
  company       String
  name          String
  ownerId       String
  mainContactId String
  amount        Int
  close_date    DateTime
  tagId         String
  last_touch    DateTime
  last_email    DateTime
  created_at    DateTime
  createdById   String
  workspaceId   String
  companyId     String?
  Activity      Activity[]
  Company       Company?   @relation(fields: [companyId], references: [id])
  People        People     @relation(fields: [mainContactId], references: [id])
  User          User       @relation(fields: [ownerId], references: [id])
  Workspace     Workspace  @relation(fields: [workspaceId], references: [id])
  Tag           Tag[]
  Task          Task[]

  @@map("deals")
}

model Email {
  id           String         @id
  senderId     String
  from         String
  to           String
  subj         String
  body         String
  sent         DateTime
  created_at   DateTime
  workspaceId  String
  User         User           @relation(fields: [senderId], references: [id])
  Workspace    Workspace      @relation(fields: [workspaceId], references: [id])
  EmailReceipt EmailReceipt[]

  @@map("emails")
}

model EmailReceipt {
  id          String    @id
  emailId     String
  bounced     Boolean
  opened      DateTime
  workspaceId String
  Email       Email     @relation(fields: [emailId], references: [id])
  Workspace   Workspace @relation(fields: [workspaceId], references: [id])

  @@map("email_receipts")
}

model Favorite {
  id          String    @id
  workspaceId String
  viewId      String
  rank        Int
  View        View      @relation(fields: [viewId], references: [id])
  Workspace   Workspace @relation(fields: [workspaceId], references: [id])

  @@map("favourites")
}

model File {
  id          String    @id
  activityId  String
  name        String
  url         String
  size        Int
  created_at  DateTime
  createdById String
  workspaceId String
  Activity    Activity  @relation(fields: [activityId], references: [id])
  User        User      @relation(fields: [createdById], references: [id])
  Workspace   Workspace @relation(fields: [workspaceId], references: [id])

  @@map("files")
}

model Invitee {
  id          String    @id
  meetingId   String
  attended    Boolean
  email       String
  userId      String
  created_at  DateTime
  workspaceId String
  Meeting     Meeting   @relation(fields: [meetingId], references: [id])
  User        User      @relation(fields: [userId], references: [id])
  Workspace   Workspace @relation(fields: [workspaceId], references: [id])

  @@map("invitees")
}

model Meeting {
  id          String    @id
  start       DateTime
  end         DateTime
  location    String
  recording   String
  created_at  DateTime
  workspaceId String
  Invitee     Invitee[]
  Workspace   Workspace @relation(fields: [workspaceId], references: [id])

  @@map("meetings")
}

model People {
  id          String     @id
  photo_url   String
  first_name  String
  last_name   String
  team_role   String
  companyId   String
  tagId       String
  last_email  DateTime
  last_mtg    DateTime
  created_at  DateTime
  createdById String
  workspaceId String
  Activity    Activity[]
  Deal        Deal[]
  Company     Company    @relation(fields: [companyId], references: [id])
  User        User       @relation(fields: [createdById], references: [id])
  Workspace   Workspace  @relation(fields: [workspaceId], references: [id])
  Tag         Tag[]

  @@map("people")
}

model Tag {
  id          String    @id
  name        String
  color       String
  created_at  DateTime
  createdById String
  workspaceId String
  peopleId    String?
  companyId   String?
  dealId      String?
  User        User      @relation(fields: [createdById], references: [id])
  Deal        Deal?     @relation(fields: [dealId], references: [id])
  People      People?   @relation(fields: [peopleId], references: [id])
  Workspace   Workspace @relation(fields: [workspaceId], references: [id])

  @@map("tags")
}

model Task {
  id          String    @id
  ownerId     String
  dealId      String
  companyId   String
  name        String
  description String
  created_at  DateTime
  createdById String
  due_date    DateTime
  workspaceId String
  Company     Company   @relation(fields: [companyId], references: [id])
  User        User      @relation(fields: [createdById], references: [id])
  Deal        Deal      @relation(fields: [dealId], references: [id])
  Workspace   Workspace @relation(fields: [workspaceId], references: [id])

  @@map("tasks")
}

model User {
  id          String     @id
  photo_url   String
  first_name  String
  last_name   String
  team_role   String
  created_at  DateTime
  createdById String
  workspaceId String
  Activity    Activity[]
  Company     Company[]
  Deal        Deal[]
  Email       Email[]
  File        File[]
  Invitee     Invitee[]
  People      People[]
  Tag         Tag[]
  Task        Task[]
  Workspace   Workspace  @relation(fields: [workspaceId], references: [id])
  View        View[]

  @@map("users")
}

model View {
  id          String     @id
  name        String
  description String
  workspaceId String
  ownerId     String
  group_by    String
  list_type   String //use correct type
  Favorite    Favorite[]
  User        User       @relation(fields: [ownerId], references: [id])
  Workspace   Workspace  @relation(fields: [workspaceId], references: [id])

  @@map("views")
}

model Workspace {
  id           String         @id
  name         String
  logo_url     String
  Activity     Activity[]
  Company      Company[]
  Deal         Deal[]
  Email        Email[]
  EmailReceipt EmailReceipt[]
  Favorite     Favorite[]
  File         File[]
  Invitee      Invitee[]
  Meeting      Meeting[]
  People       People[]
  Tag          Tag[]
  Task         Task[]
  User         User[]
  View         View[]

  @@map("workspaces")
}

enum ActivityType {
  EMAIL
  CALL
  MEETING
  TASK
  NOTE
}

enum ListType {
  TABLE
  KANBAN
}
